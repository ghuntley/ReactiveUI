site_name: ReactiveUI Documentation
site_url: http://docs.reactiveui.net/
site_description: A MVVM framework that integrates with the Reactive Extensions for .NET to create elegant, testable User Interfaces that run on any mobile or desktop platform. Supports Xamarin.iOS, Xamarin.Android, Xamarin.Mac, WPF, Windows Forms, Windows Phone 8 and Windows Store apps.
site_favicon: img/favicon.png

dev_addr: '0.0.0.0:8000'

repo_url: https://github.com/ghuntley/reactiveui/

docs_dir: docs/sources
site_dir: docs/_build/

theme: readthedocs
#theme_dir: ./theme/mkdocs/
#theme_center_lead: false

copyright: Copyright &copy; 2015, ReactiveUI, i.
google_analytics: ['UA-6096819-11', 'ReactiveUI.io']

pages:

# About:
- ['index.md', 'About', 'ReactiveUI']
- ['release-notes.md', 'About', 'Release Notes']

# Concepts:
- ['concepts/reactive-extensions.md', 'Concepts', 'Reactive Extensions']
- ['concepts/functional-reactive-programming.md', 'Concepts', 'Functional Reactive Programming']
- ['concepts/model-view-viewmodel.md', 'Concepts', 'Model View ViewModel']
- ['concepts/commands.md', 'Concepts', 'Commands'] 
- ['concepts/binding.md', 'Concepts', 'Data & Command Binding']

# Getting Started:
- ['getting-started/ReactiveUI-101.md', 'Getting Started', 'ReactiveUI 101']
- ['getting-started/solution-layout.md', 'Getting Started', 'Solution Layout']

# Fundamentals:
- ['fundamentals/reactive-object.md', 'Fundamentals', 'ReactiveObject']
- ['fundamentals/reactive-list.md', 'Fundamentals', 'ReactiveList']
- ['fundamentals/reactive-list-create-derived-collection.md', 'Fundamentals', 'Creating Derived Lists']

# Commands: 
- ['commands/reactive-command-async.md', 'Commands', 'Async Commands']
- ['commands/ireactivecommand.md', 'Commands', 'IReactiveCommand']


# Binding:  
- ['binding/type-converters.md', 'Binding', 'Type Converters']
- ['binding/wpf.md', 'Binding', 'WPF']
- ['binding/ios.md', 'Binding', 'iOS']

# Routing:
- ['routing/reactiveui.md', 'Routing', 'ReactiveUI']
- ['routing/xamarin-forms.md', 'Routing', 'Xamarin Forms']
- ['routing/caliburn-micro.md', 'Routing', 'Caliburn Micro']

# Dependency Injection:
- ['dependency-injection/splat.md', 'Dependency Injection', 'Splat']
- ['dependency-injection/autofac.md', 'Dependency Injection', 'Autofac']

# Logging:
- ['logging/splat.md', 'Logging', 'Splat']
- ['logging/nlog.md', 'Logging', 'NLog']

# Error Handling:
- ['error-handling/index.md', 'Error Handling', 'Introduction']
- ['error-handling/user-errors.md', 'Error Handling', 'User Errors']
- ['error-handling/recovery-options.md', 'Error Handling', 'Recovery Options']

# Troubleshooting:
- ['troubleshooting/threading.md', 'Troubleshooting', 'Threading']
- ['troubleshooting/apple-ios.md', 'Troubleshooting', 'Apple iOS']

# ghuntley [11:52 AM] It should be split into UserErrors (recoverable
# errors and how to handle them) and then BigBadErrors (i.e. Rx
# OnErorr() and how to throw a recoverable error?)
# 
# ghuntley [11:53 AM] Introduction to Rx.OnError(), introduction to
# userror, introduction to recoverycommands and then
# production/consumption of all of the concepts

# Testing:

# Caching:

# Networking:

#- ['introduction/index.md', '**HIDDEN**']
#- ['introduction/understanding-ReactiveUI.md', 'About', 'Understanding ReactiveUI']

# - ['static_files/README.md', 'static_files', 'README']
#- ['terms/index.md', '**HIDDEN**']
#- ['terms/layer.md', '**HIDDEN**']
#- ['terms/index.md', '**HIDDEN**']
#- ['terms/registry.md', '**HIDDEN**']
#- ['terms/container.md', '**HIDDEN**']
#- ['terms/repository.md', '**HIDDEN**']
#- ['terms/filesystem.md', '**HIDDEN**']
#- ['terms/image.md', '**HIDDEN**']

# Contribute:
#- ['contributing/index.md', '**HIDDEN**']
- ['contributing/index.md', 'Contribute', 'Contributing']
#- ['contributing/docs_style-guide.md', 'Contribute', 'Documentation style guide']
